name: 'IAC Azure Terraform Plan'

on:
  workflow_call:
    inputs:
      terraform_args:
        required: false
        type: string

jobs:
  plan:
    name: 'Plan'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        id: init
        run: "terraform init ${{ inputs.terraform_args }} \\\n 
          -backend-config=\"resource_group_name=${{ secrets.AZURE_BACKEND_RESOURCE_GROUP_NAME }}\" \\\n
          -backend-config=\"storage_account_name=${{ secrets.AZURE_BACKEND_STORAGE_ACCOUNT_NAME }}\" \\\n
          -backend-config=\"container_name=${{ secrets.AZURE_BACKEND_CONTAINER_NAME }}\" \\\n
          -backend-config=\"key=${{ secrets.AZURE_BACKEND_KEY }}\"  \\\n
          -backend-config=\"use_oidc=true\"  \\\n
          -backend-config=\"subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}\"  \\\n
          -backend-config=\"tenant_id=${{ secrets.AZURE_AD_TENANT_ID }}\""
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan ${{ inputs.terraform_args }} -input=false -out=${{ github.sha }}.tfplan
      
      - name: Store Terraform plan
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}.tfplan
          path: output/tf/${{ github.sha }}.tfplan